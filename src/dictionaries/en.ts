
import type { Dictionary } from '@/types';

const databaseSchemaMarkdownEn = `
## Collection: \`articles\`

This collection stores all articles, blogs, resources, and other content created through the admin panel.

-   **Document ID**: A unique ID automatically generated by Firestore.

### Document Fields

| Field              | Data Type        | Description                                                                                               |
| ------------------ | ------------------- | --------------------------------------------------------------------------------------------------------- |
| \`title\`            | \`string\`            | The main title of the article.                                                                         |
| \`body\`             | \`string\`            | The full content of the article, written in Markdown format.                                          |
| \`status\`           | \`string\`            | The publication status. Can be \`"draft"\` or \`"published"\`.                       |
| \`createdAt\`        | \`Timestamp\`         | The creation date and time of the article. Automatically generated.                                      |
| \`updatedAt\`        | \`Timestamp\`         | The date and time of the last update. Automatically updated on each save.                  |
| \`slug\`             | \`string\`            | The user-friendly URL generated from the title, with the format \`/{month}-{day}-{sanitized-title}\`.           |
| \`authorId\`         | \`string\`            | The UID (user ID) of the author who created or edited the article. Automatically saved.                 |
| \`authorEmail\`      | \`string\`            | The author's email. Automatically saved.                                               |
| \`imageUrl\`         | \`string\`            | URL of the featured image uploaded to Firebase Storage.                                                     |
| \`imageUrl1\`        | \`string\`            | URL of the first additional image.                                                                       |
| \`imageUrl2\`        | \`string\`            | URL of the second additional image.                                                                       |
| \`fileUrl\`          | \`string\`            | URL of the attached file uploaded to Firebase Storage.                                                        |
| \`fileName\`         | \`string\`            | The original name of the attached file.                                                                   |
| \`articleType\`      | \`string\`            | The selected content type: \`"blog"\`, \`"resource"\`, \`"video"\`, or \`"other"\`.                        |
| \`otherArticleType\` | \`string\`            | If \`articleType\` is \`"other"\`, this field stores the custom type specified by the user.     |
| \`categories\`       | \`Array<string>\`     | A list of categories associated with the article, only if \`articleType\` is \`"blog"\`.                         |

## Collection: \`profiles\`

This collection stores the public profile information for each user/author.

-   **Document ID**: The UID from Firebase Authentication. This ensures each user has a single profile document.

### Document Fields

| Field         | Data Type | Description                                                                              |
| ------------- | ------------ | ---------------------------------------------------------------------------------------- |
| \`displayName\` | \`string\`     | The public name the user chooses to display.                                     |
| \`bio\`         | \`string\`     | A short biography or description of the author.                                             |
| \`website\`     | \`string\`     | The URL of the author's personal or professional website.                                   |
| \`email\`       | \`string\`     | The user's email. Automatically saved from their Firebase account. |
| \`authorId\`    | \`string\`     | The user's UID. Saved silently for consistency.                     |
| \`photoURL\`    | \`string\`     | URL of the profile photo uploaded to Firebase Storage.                                    |

## Collection: \`users\`

This collection stores essential user information, primarily for role management.

-   **Document ID**: The UID from Firebase Authentication.

### Document Fields

| Field   | Data Type | Description                                                                              |
| ------- | ------------ | ---------------------------------------------------------------------------------------- |
| \`email\` | \`string\`     | The user's email. Automatically saved from their Firebase account. |
| \`role\`  | \`string\`     | The user's role within the application (e.g. \`"Admin"\`, \`"Editor"\`, \`"Jr. Editor"\`). |

## Collection: \`invitations\`

This collection stores single-use invitations for registering new users.

-   **Document ID**: A unique, automatically generated token used in the invitation link.

### Document Fields

| Field          | Data Type | Description                                                                       |
| -------------- | ------------ | --------------------------------------------------------------------------------- |
| \`email\`        | \`string\`     | The invited user's email address.                                       |
| \`role\`         | \`string\`     | The role that will be assigned to the user upon registration.                        |
| \`createdAt\`    | \`Timestamp\`  | The date and time the invitation was created. Automatically generated.        |
| \`used\`         | \`boolean\`    | A flag to mark if the invitation has already been used. Starts as \`false\`. |
| \`creatorId\`    | \`string\`     | The UID of the administrator who generated the invitation.                                |
| \`creatorEmail\` | \`string\`     | The email of the administrator who generated the invitation.                             |

## Collection: \`siteConfig\`

This collection stores the global settings for the site. It is expected to contain a single document.

-   **Document ID**: \`default-site\`

### Document Fields

| Field                  | Data Type | Description                                                                                   |
| ---------------------- | ------------ | --------------------------------------------------------------------------------------------- |
| \`siteName\`             | \`string\`     | The name of the site displayed in the panel and browser tab title.     |
| \`deployHookUrl\`        | \`string\`     | The webhook URL to call to trigger a new deploy when content is published. |
| \`siteUrl\`              | \`string\`     | The main public URL of your site (e.g. https://my-site.com).                                |
| \`blogPath\`             | \`string\`     | The base path for blog articles (e.g. \`/blog\`).                                        |
| \`resourcesPath\`        | \`string\`     | The base path for resources (e.g. \`/resources\`).                                             |
| \`videosPath\`           | \`string\`     | The base path for videos (e.g. \`/videos\`).                                                 |
| \`otherPath\`            | \`string\`     | The base path for other content types (e.g. \`/archive\`).                                    |
| \`aiSiteDescription\`    | \`string\`     | Brief site description for AI context.                                        |
| \`aiTargetAudience\`     | \`string\`     | The target audience of the site for AI context.                                      |
| \`aiKeyProducts\`        | \`string\`     | Key products, services, or topics for AI context.                                 |
| \`aiForbiddenTopics\`    | \`string\`     | Topics or words for the AI to avoid.                                                       |

## Collection: \`license\`

This collection stores a unique identifier for the installation, linked to the first administrator.

-   **Document ID**: A unique ID automatically generated by Firestore.

### Document Fields

| Field | Data Type    | Description                                                            |
| ----- | ------------ | ---------------------------------------------------------------------- |
| \`uid\` | \`string\`     | The UID of the first admin user who configured the application.      |

## Collection: \`publicConfig\`

This collection stores public settings accessible without authentication.

-   **Document ID**: \`main\`

### Document Fields

| Field         | Data Type | Description                                                            |
| ------------- | ------------ | ---------------------------------------------------------------------- |
| \`loginLogoUrl\`| \`string\`     | The URL of the logo to be displayed on the login page.      |


## Security Rules

The security rules for these collections are in the \`firestore.rules\` file at the root of the project. It is crucial to apply these rules in the Firebase console to protect the database from unauthorized access.
`;

export const dictionary: Dictionary = {
  login: {
    title: 'Login',
    emailLabel: 'Email',
    passwordLabel: 'Password',
    submitButton: 'Login',
    error: 'Login failed. Please check your credentials.',
    forgotPassword: 'Forgot your password?',
    resetPasswordTitle: 'Reset Password',
    resetPasswordDescription: "Enter your email and we'll send you a link to reset your password.",
    sendResetLink: 'Send Reset Link',
    resetEmailSent: 'Reset email sent!',
    resetEmailSentDescription: 'Check your inbox (and spam folder) to continue.',
    resetError: 'Error sending email.',
    resetErrorDescription: 'Please make sure the email is correct and registered.',
    cancel: 'Cancel',
    enterEmailPrompt: 'Please enter your email.',
    firstUserTitle: 'Create Admin Account',
    firstUserDescription: 'This is the first time setting up the app. Create the main administrator account to get started.',
    createAccountButton: 'Create Account',
    firstAdminNameLabel: 'Your Full Name',
    firstAdminNamePlaceholder: 'John Doe',
    invitation: {
      title: 'Complete Registration',
      description: "You're one step away from joining the team. Complete your profile to continue.",
      displayNameLabel: 'Your Full Name',
      displayNamePlaceholder: 'Jane Doe',
      submitButton: 'Complete Registration',
      errorTitle: 'Invitation Error',
      invalid: 'The invitation link is invalid or has expired.',
      used: 'This invitation link has already been used.',
      genericError: 'An error occurred while registering your account.',
      successTitle: 'Welcome!',
      successDescription: 'Your account has been created successfully.',
    },
  },
  sidebar: {
    dashboard: 'Dashboard',
    content: 'Content',
    users: 'Users',
    usersTooltip: 'Manage team users.',
    settingsTooltip: 'Manage site settings.',
    adminOnlyTooltip: 'Only admins can access this section.',
    proUsersTooltip: 'Upgrade to a Pro plan to manage users.',
    siteSettings: 'Site Settings',
    instructions: 'Instructions',
    logout: 'Logout',
    theme: 'Theme',
    light: 'Light',
    dark: 'Dark',
    system: 'System',
    tools: 'Tools',
    toolsTooltip: 'Additional Tools.',
    proToolsTooltip: 'Upgrade to Pro to access additional tools.',
    roleToolsTooltip: 'You do not have permission to access this section.',
    tokenWarning: 'You have used {percent}% of your tokens.'
  },
  dashboard: {
    title: 'Dashboard',
    welcome: 'Welcome back!',
    welcomeSubtitle: "Here's a summary of your site.",
    totalArticles: 'Total Articles',
    drafts: 'Drafts',
    published: 'Published',
    recentActivity: {
      title: 'Recent Activity',
      description: 'The last 5 updated articles.',
      viewAll: 'View All',
      articleTitle: 'Article',
      status: 'Status',
      lastUpdated: 'Last Updated',
      noArticles: 'No recent articles.',
    },
    contentBreakdown: {
      title: 'Content Breakdown',
      description: 'Distribution of your content types.',
    },
    statusValues: {
      draft: 'Draft',
      published: 'Published',
    },
    contentTypes: {
      blog: 'Blog',
      resource: 'Resource',
      video: 'Video',
      other: 'Other',
    },
    contentTypeTitle: 'Content Overview',
    contentTypeDescription: 'Click on a card to view all content of that type.',
  },
  content: {
    title: 'Content Management',
    description: 'Manage your articles and blog posts here.',
    newArticle: 'New Article',
    table: {
      title: 'Title',
      status: 'Status',
      type: 'Type',
      actions: 'Actions',
      view: 'View Article',
      edit: 'Edit',
      delete: 'Delete',
      viewTooltip: 'Changes may take a few minutes to be reflected after a deploy.',
    },
    statusValues: {
      draft: 'Draft',
      published: 'Published',
    },
    deleteDialog: {
      title: 'Are you sure?',
      description: 'This action cannot be undone. This will permanently delete the article.',
      cancel: 'Cancel',
      continue: 'Continue',
    },
    editAccessDenied: {
      title: 'Access Denied',
      description: 'You do not have permission to edit this article.',
    },
  },
  contentForm: {
    createTitle: 'Create New Article',
    editTitle: 'Edit Article',
    titleLabel: 'Title',
    titlePlaceholder: 'Your article title',
    titleTooltip: 'This will be shown on the final page and in the URL.',
    bodyLabel: 'Body',
    bodyPlaceholder: 'Write your content here...',
    bodyTooltip: 'Markdown is supported. You can switch the view to see how it will look.',
    markdownHint: 'Markdown is supported.',
    statusLabel: 'Status (Draft)',
    statusTooltip: 'Defines if the article is publicly visible (Published) or only visible to administrators (Draft).',
    statusTooltipRedactorJr: 'As a Jr. Editor, you can only save articles as drafts. An Admin or Editor must publish them.',
    submit: 'Save Article',
    success: 'Article saved successfully.',
    error: 'Failed to save article.',
    write: 'Write',
    preview: 'Preview',
    featuredImageLabel: 'Featured Image',
    featuredImageDescription: 'The image will be automatically optimized to WebP format. Max 10MB.',
    featuredImageTooltip: 'This is the main image for the article. After uploading, use the copy button to paste the markdown code into the body.',
    additionalImageLabel: 'Additional Image',
    additionalImageTooltip: 'Additional image for the article. After uploading, use the copy button to paste the markdown code into the body.',
    copyMarkdown: 'Copy Markdown',
    copyMarkdownTooltip: 'Paste this into the article to display the image.',
    copySuccessTitle: 'Copied',
    copySuccessDescription: 'The Markdown code has been copied.',
    deleteImageTooltip: 'Delete Image',
    uploadCTA: 'Click to upload',
    statusValues: {
      draft: 'Draft',
      published: 'Published',
    },
    infoDialogTitle: 'Information',
    infoDialogClose: 'Close',
    articleTypeLabel: 'Content Type',
    articleTypePlaceholder: 'Select a type',
    articleTypeTooltip: 'Classify the content for better organization.',
    articleTypeValues: {
        blog: 'Article or Blog',
        resource: 'Resource',
        video: 'Video',
        other: 'Other (specify)',
    },
    otherTypeLabel: 'Specify Type',
    otherTypePlaceholder: 'e.g. Podcast',
    otherTypeTooltip: 'Enter the custom content type. Single word, max 20 characters.',
    categoriesLabel: 'Categories',
    categoriesPlaceholder: 'travel, tips, advice',
    categoriesTooltip: 'Comma-separated list of categories.',
    fileUploadLabel: 'File Attachment',
    fileUploadDescription: 'Upload any file to link in your article.',
    deleteFileTooltip: 'Delete File',
    copyFileMarkdownTooltip: 'Copy the download link as Markdown.',
    optimizingImageTitle: 'Optimizing image...',
    optimizingImageDescription: 'Please wait a moment. This may take some time depending on the image size.',
    uploadSuccessTitle: 'Optimized image uploaded!',
    uploadSuccessDescription: 'Your image is ready to be used.',
    optimizationErrorTitle: 'Optimization Error',
    optimizationErrorDescription: 'Could not optimize the image. Please try again with a different image.',
    markdownToolbar: {
      h1: 'Heading 1',
      h2: 'Heading 2',
      bold: 'Bold',
      italic: 'Italic',
      list: 'Bulleted List',
      quote: 'Quote',
    },
    aiSuggestButton: 'Suggest with AI',
    aiSuggestTitleTooltipCommunity: 'Upgrade to a Pro plan to use AI features.',
    aiProSuggestTitleTooltip: 'Suggest with AI: Improve title (min 20 characters)',
    aiSuccess: 'Title updated!',
    aiSuccessDescription: 'The AI has suggested a new title.',
    aiError: 'AI Error',
    aiErrorDescription: 'Could not generate a title suggestion.',
    aiTitleTooShort: 'Title too short',
    aiTitleTooShortDescription: 'Please write at least 20 characters to get suggestions.',
    aiUpgradeRequired: 'Upgrade Required',
    aiUpgradeRequiredDescription: 'This is a premium feature. Please upgrade your plan.',
    aiContextPopover: {
      title: 'Additional Context',
      description: 'Provide up to 5 keywords to guide the AI (optional).',
      placeholder: 'E.g. beginners, marketing, fast',
      closeButton: 'Apply',
    },
    aiBodyContextPopover: {
      title: 'Context for Body',
      description: 'Provide up to 5 keywords to guide the AI (optional).',
      placeholder: 'E.g. formal tone, for experts',
      closeButton: 'Apply',
    },
    aiGenerateBody: 'Generate',
    aiGenerateBodyTooltip: 'Generate content based on the title',
    aiGenerateBodyCondition: 'A title is required',
    aiImproveBody: 'Improve',
    aiImproveBodyTooltip: 'Improve the existing text',
    aiImproveBodyCondition: 'At least 60 characters in the body are required',
    aiAddMarkdown: 'Add Markdown',
    aiAddMarkdownTooltip: 'Format the text with Markdown',
    aiAddMarkdownCondition: 'At least 60 characters in the body are required',
    aiBodySuccess: 'Article body updated!',
    aiBodySuccessDescription: 'The AI has processed the content.',
    aiBodyError: 'AI Error',
    aiBodyErrorDescription: 'Could not process the content.',
  },
  settings: {
    title: 'Profile Settings',
    description: 'This information will be publicly visible. Edit how others see you.',
    displayNameLabel: 'Display Name',
    bioLabel: 'Biography',
    websiteLabel: 'Website',
    websitePlaceholder: 'https://your-site.com',
    submitButton: 'Save Profile',
    successMessage: 'Profile updated successfully.',
    errorMessage: 'Failed to update profile.',
    changePhotoButton: 'Change photo',
    uploadingPhoto: 'Uploading photo...',
    activatePlan: 'Plan Activation',
    activatePlanTitle: 'Plan Activation Portal',
    activatePlanDescription: 'Click the button below to go to the secure portal where you can manage your plan and payment method.',
    goToPortalButton: 'Go to Activation Portal',
    loadingLicense: 'Loading license information...',
  },
  siteSettings: {
    title: 'Site Settings',
    description: 'Configure global settings for your site, like deploy webhooks.',
    adminOnlyTitle: 'Access Denied',
    adminOnlyDescription: 'This section is for administrators only.',
    deployHookUrlLabel: 'Deploy Webhook URL',
    deployHookUrlDescription: 'Whenever you publish an article, a POST request will be sent to this URL to trigger a new deploy.',
    siteUrlLabel: 'Site URL',
    siteUrlDescription: 'The main public URL of your site. Used to generate links to preview articles.',
    loginLogoUrlLabel: 'Login Page Logo',
    loginLogoUrlDescription: 'Upload a logo to be displayed on the login page.',
    siteNameLabel: 'Site Name',
    siteNameDescription: 'The name that will appear in the panel and in the tab title.',
    pathSettingsTitle: 'Content Path Settings',
    pathSettingsDescription: "Define the base paths for different content types. This gives you full control over your site's SEO and organization.",
    blogPathLabel: 'Path for Blogs/Articles',
    blogPathDescription: 'The base path for blog articles (e.g., /blog).',
    resourcesPathLabel: 'Path for Resources',
    resourcesPathDescription: 'The base path for resources (e.g., /resources).',
    videosPathLabel: 'Path for Videos',
    videosPathDescription: 'The base path for videos (e.g., /videos).',
    otherPathLabel: 'Path for "Other"',
    otherPathDescription: 'The base path for "other" content types (e.g., /archive).',
    upgradePlanPrompt: 'Upgrade your plan to use AI features.',
    proFeatureDescription: 'This is a Pro feature. Upgrade your plan to enable it.',
    submitButton: 'Save Settings',
    successTitle: 'Success!',
    successMessage: 'Settings saved successfully.',
    fetchError: 'Failed to load site configuration.',
    saveError: 'Failed to save settings.',
    deployHookTriggered: 'Deploy triggered!',
    deployHookError: 'Failed to trigger deploy.',
    aiContext: {
      title: 'AI Context Information',
      description: 'Provide the AI with general information about your site to generate more relevant and brand-aligned content.',
      formDescription: 'These fields provide context to the AI to improve the quality of suggestions and generations.',
      siteNameLabel: 'Site Name',
      siteNamePlaceholder: 'My awesome blog',
      siteDescriptionLabel: 'Brief Site Description',
      siteDescriptionPlaceholder: 'A site dedicated to...',
      targetAudienceLabel: 'Target Audience',
      targetAudiencePlaceholder: 'E.g., Young professionals, tech enthusiasts...',
      keyProductsLabel: 'Key Products or Services (Optional)',
      keyProductsPlaceholder: 'List the main products, services, or topics covered.',
      forbiddenTopicsLabel: 'Forbidden Topics or Words (Optional)',
      forbiddenTopicsPlaceholder: 'Topics the AI should avoid. E.g., politics, competitors...',
    },
    logoUploadButton: 'Upload Logo',
    uploadingLogoButton: 'Uploading...',
    changeLogoButton: 'Change Logo',
    logoUploadSuccess: 'Logo uploaded successfully.',
    logoUploadError: 'Failed to upload logo.',
    generalSettingsCardTitle: 'General Settings',
    logoCardTitle: 'Login Page Logo',
    integrationsCardTitle: 'Integrations & Automation',
    pathsCardTitle: 'Content Paths',
    aiContextCardTitle: 'AI Context',
    viewSettings: 'View Settings',
  },
  users: {
    title: 'User Management',
    description: 'Manage roles and permissions for your team.',
    upgradeTitle: 'Pro Feature: User Management',
    upgradeDescription: 'Upgrade to a Pro plan to invite and manage team members, assign roles, and control permissions.',
    upgradeButton: 'View Plans',
    adminOnlyTitle: 'Access Denied',
    adminOnlyDescription: 'This section is for administrators only.',
    tableTitle: 'User List',
    tableDescription: 'These are all the users registered on the platform.',
    emailColumn: 'Email',
    roleColumn: 'Role',
    actionsColumn: 'Actions',
    inviteUser: 'Invite User',
    inviteUserTitle: 'Invite a new user',
    inviteUserDescription: 'Enter the email address and assign a role. A unique registration link will be generated.',
    generateLink: 'Generate Link',
    linkGeneratedSuccess: 'Invitation link generated!',
    copyLink: 'Copy link',
    inviteLink: 'Invitation Link',
    inviteLinkDescription: 'Send this link to the user so they can sign up. The link is for single use only.',
    editRole: 'Edit Role',
    editRoleTitle: 'Edit role for',
    editRoleDescription: 'Select the new role for the user.',
    saveChanges: 'Save Changes',
    roleUpdatedSuccess: 'Role updated!',
    roleUpdatedError: 'Failed to update role.',
    roles: {
      Admin: 'Admin',
      Redactor: 'Editor',
      'Redactor Jr.': 'Jr. Editor',
    },
    viewInvitations: 'View Invitations',
    invitations: {
      title: 'Invitations',
      description: 'Manage pending and used invitations.',
      tableTitle: 'Invitation List',
      emailColumn: 'Invited Email',
      roleColumn: 'Assigned Role',
      statusColumn: 'Status',
      createdByColumn: 'Created By',
      createdAtColumn: 'Created At',
      actionsColumn: 'Actions',
      noInvitations: 'No invitations found.',
      status: {
        pending: 'Pending',
        used: 'Used',
      },
      deleteAction: 'Delete',
      deleteDialog: {
        title: 'Are you sure?',
        description: 'This will permanently delete the invitation. This action cannot be undone.',
      },
      deleteSuccess: 'Invitation deleted.',
      deleteError: 'Failed to delete invitation.',
      copySuccess: 'Invitation link copied!',
    },
  },
  tools: {
    title: 'Additional Tools',
    description: 'A collection of utilities to boost your workflow.',
    qrGenerator: {
      label: 'QR Generator',
      description: 'Generate and customize QR codes for URLs, text, and more. Download in high quality.',
      pageTitleHtml: ['QR Code ', 'Generator'],
      pageDescription: 'Easily create and customize QR codes for your links, text, and more. All in your browser, instant download!',
      previewTitle: 'Your QR Code',
      previewDescription: 'Preview your QR code here. It updates automatically as you change the options.',
      placeholderTitle: 'Enter data to generate the QR code.',
      placeholderDescription: 'Type a text or URL in the right-side panel.',
      downloadButton: 'Download QR (.png)',
      privacyNote: 'QR codes are generated locally in your browser. We do not store any data.',
      optionsTitle: 'Options',
      textLabel: 'Text or URL',
      textPlaceholder: 'E.g.: https://rtsi.site',
      fgColorLabel: 'Foreground Color',
      bgColorLabel: 'Background Color',
      sizeLabel: 'Size (px)',
      levelLabel: 'Correction Level',
      levelPlaceholder: 'Select level',
      levelLow: 'Low (L)',
      levelMedium: 'Medium (M)',
      levelQuartile: 'Quartile (Q)',
      levelHigh: 'High (H)',
      toastDownloadSuccessTitle: 'Download Started',
      toastDownloadSuccessDesc: 'Your QR code is downloading.',
      toastDownloadErrorTitle: 'Download Error',
      toastDownloadErrorDescCanvas: 'Could not create the canvas context for download.',
      toastDownloadErrorDescGeneric: 'Could not generate the file for download.',
      toastDownloadErrorDescNotFound: 'Could not find the QR code to download.',
    },
    vcfGenerator: {
      label: 'vCard Generator',
      description: 'Create digital contact cards (.vcf) to share your details professionally.',
      pageTitleHtml: ['Contact Card Generator ', 'vCard (.vcf)'],
      pageDescription: 'Create and download custom .vcf files with your contact information and photo. Ideal for sharing your details professionally.',
      mainInfoTitle: 'Main Information',
      firstNameLabel: 'First Name',
      firstNamePlaceholder: 'John',
      lastNameLabel: 'Last Name',
      lastNamePlaceholder: 'Doe',
      organizationLabel: 'Organization/Company',
      organizationPlaceholder: 'Innovatech Solutions',
      titleLabel: 'Job Title',
      titlePlaceholder: 'Senior Developer',
      photoTitle: 'Profile Picture',
      photoDescription: 'Optional. A square image is recommended (max 2MB).',
      photoAlt: 'Profile picture preview for vCard',
      photoRemoveAriaLabel: 'Remove photo',
      photoUploadLabel: 'Upload photo',
      contactDetailsTitle: 'Contact Details',
      phoneWorkLabel: 'Phone (Work)',
      phoneMobileLabel: 'Phone (Mobile)',
      phonePlaceholder: '+1 234 567 890',
      emailWorkLabel: 'Email (Work)',
      emailWorkPlaceholder: 'john.doe@company.com',
      emailPersonalLabel: 'Email (Personal)',
      emailPersonalPlaceholder: 'john@email.com',
      websiteLabel: 'Website',
      websitePlaceholder: 'https://www.company.com',
      addressTitle: 'Address (Work)',
      addressStreetLabel: 'Street and Number',
      addressStreetPlaceholder: 'Main St 123',
      addressCityLabel: 'City',
      addressCityPlaceholder: 'Anytown',
      addressStateLabel: 'State/Province',
      addressStatePlaceholder: 'Anystate',
      addressZipLabel: 'ZIP Code',
      addressZipPlaceholder: '12345',
      addressCountryLabel: 'Country',
      addressCountryPlaceholder: 'Anycountry',
      notesTitle: 'Additional Notes',
      notesLabel: 'Notes',
      notesPlaceholder: 'Additional information, such as contact hours, specialties, etc.',
      downloadButton: 'Generate and Download vCard (.vcf)',
      faqTitle: 'Instructions & FAQs',
      faqItems: [
        { question: 'What is a VCF (vCard) file?', answer: 'A VCF file, or vCard, is a standard format for electronic business cards. It allows you to easily exchange contact information between different devices and email or contact applications.' },
        { question: 'How do I use the generator?', answer: 'Fill in the form fields with the contact information you want to include. You can add a profile picture (square is recommended). Then, click "Generate and Download vCard" to get your .vcf file.' },
        { question: 'What happens to my information?', answer: 'All the information you enter and the generation of the VCF file are done directly in your browser. We do not store or transmit your data to any server. Your privacy is protected.' },
        { question: 'Is there a size limit for the photo?', answer: 'Yes, for optimal performance, the photo size should not exceed 2MB. Images are converted to Base64 format to be included in the VCF file, which can increase their size.' },
      ],
      toastPhotoTooLargeTitle: 'Image Too Large',
      toastPhotoTooLargeDesc: 'Please choose an image smaller than 2MB.',
      toastInsufficientDataTitle: 'Insufficient Data',
      toastInsufficientDataDesc: 'Please enter at least a first name, last name, or organization.',
      toastDownloadStartedTitle: 'Download Started',
      toastDownloadStartedDesc: 'The file {filename} is downloading.',
    },
    imageOptimizer: {
        label: 'Image Optimizer',
        description: 'Reduce the size of your images without losing quality, right in your browser.',
        pageTitleHtml: ['Smart Image ', 'Optimizer'],
        pageDescription: 'Compress your JPEG, PNG, and WEBP images directly in your browser. Fast, secure, and no server uploads.',
        upgradeTitle: 'Pro Member Tool',
        upgradeDescription: 'The Image Optimizer is an exclusive tool for users on a Pro plan or higher.',
        upgradeCTA: 'Upgrade your plan to access this and other advanced tools that will supercharge your workflow.',
        roleErrorTitle: 'Access Denied',
        roleErrorDescription: 'You do not have the required role to access this tool.',
        uploadTitle: 'Upload Your Image',
        uploadDescription: 'Drag and drop a file here or click to select. Max {size}MB.',
        uploadCTA: 'Click or drag your image',
        originalLabel: 'Original',
        optimizedLabel: 'Optimized',
        savings: 'savings',
        cleanButton: 'Clear',
        downloadButton: 'Download',
        optionsTitle: 'Optimization Options',
        outputFormatLabel: 'Output Format',
        formatWebp: 'WEBP (Recommended)',
        formatJpeg: 'JPEG',
        formatPng: 'PNG',
        qualityLabel: 'Quality',
        qualityDescription: 'Does not apply to PNG. Lower quality = smaller size.',
        optimizeButton: 'Optimize Image',
        optimizingButton: 'Optimizing...',
        howItWorksTitle: 'How does it work?',
        howItWorksSteps: [
            '1. Upload your image (by dragging or selecting).',
            '2. Adjust the desired quality and format.',
            '3. Click "Optimize Image".',
            '4. Preview and download the result.',
        ],
        howItWorksNote: 'The entire process is done on your device. Your images never leave your browser.',
        toastFileSizeError: 'File Too Large',
        toastFileSizeErrorDesc: 'Please choose an image file smaller than {size}MB.',
        toastNoImageError: 'No image selected',
        toastNoImageErrorDesc: 'Please choose an image to optimize.',
        toastSuccessTitle: 'Image Optimized!',
        toastSuccessDesc: 'Size has been reduced by {percentage}%.',
        toastGenericErrorTitle: 'Optimization Error',
        toastGenericErrorDesc: 'Could not optimize the image. Please try again or use a different file.',
        uploadToStorageButton: 'Upload to Cloud',
        uploadingToStorageButton: 'Uploading...',
        toastUploadSuccessTitle: 'Image uploaded to cloud!',
        toastUploadErrorTitle: 'Upload Error',
        previousUploadsTitle: 'Previously Uploaded Images',
        noPreviousUploads: 'No images have been uploaded yet.',
        toastCopySuccessTitle: 'Link Copied!',
        toastCopySuccessDesc: 'The image URL has been copied.',
        toastDeleteSuccessTitle: 'Image Deleted!',
        toastDeleteErrorTitle: 'Delete Failed',
        toastDeleteErrorUnauthorized: 'You do not have permission to delete this file.',
    },
    imageOptimizerBatch: {
      label: 'Batch Image Optimizer',
      description: 'Optimize multiple images at once. A huge time saver for your galleries.',
      pageTitleHtml: ['Batch Image ', 'Optimizer'],
      pageDescription: 'Compress multiple images at once. Fast and private, everything happens in your browser.',
      roleErrorTitle: 'Access Denied',
      roleErrorDescription: 'You do not have the required role to access this tool.',
      uploadTitle: 'Upload Your Images',
      uploadDescription: 'Drag or select up to {maxFiles} files. Max {maxSize}MB per file.',
      uploadCTA: 'Click or drag your images',
      selectedFilesTitle: '{count} images selected:',
      processing: 'Processing...',
      optimizingStatus: 'Optimizing {current} of {total}: {fileName}',
      resultsTitle: 'Optimization Results',
      savings: 'savings',
      downloadButton: 'Download',
      cleanButton: 'Clear',
      optionsTitle: 'Optimization Options',
      outputFormatLabel: 'Output Format',
      formatWebp: 'WEBP (Recommended)',
      formatJpeg: 'JPEG',
      formatPng: 'PNG',
      qualityLabel: 'Quality',
      qualityDescription: 'Does not apply to PNG. Lower quality = smaller size.',
      optimizeButton: 'Optimize Batch',
      optimizingButton: 'Optimizing...',
      toastTooManyFilesTitle: 'Too Many Files',
      toastTooManyFilesDesc: 'Please select a maximum of {maxFiles} images.',
      toastFileTooLargeTitle: 'File Too Large',
      toastFileTooLargeDesc: 'The image "{fileName}" exceeds {maxSize}MB and will be skipped.',
      toastNoImagesTitle: 'No images selected',
      toastNoImagesDesc: 'Please choose one or more images to optimize.',
      toastErrorCompressingTitle: 'Error in {fileName}',
      toastErrorCompressingDesc: 'Could not optimize this image. It will be skipped.',
      toastSuccessTitle: 'Optimization Complete!',
      toastSuccessDesc: 'Se han procesado {count} imágenes.',
      uploadToStorageButton: 'Upload to Cloud',
      uploadingToStorageButton: 'Uploading...',
      toastUploadSuccessTitle: 'Image "{fileName}" uploaded to cloud!',
      toastUploadErrorTitle: 'Upload Error for "{fileName}"',
      previousUploadsTitle: 'Previously Uploaded Images',
      noPreviousUploads: 'No images have been uploaded yet.',
      toastDeleteSuccessTitle: 'Image Deleted!',
      toastDeleteErrorTitle: 'Delete Failed',
      toastDeleteErrorUnauthorized: 'You do not have permission to delete this file.',
    },
    linkGenerator: {
        label: 'Chat Link Generator',
        description: 'Create direct links to WhatsApp and Telegram, with predefined messages.',
        pageTitleHtml: ['Chat Link ', 'Generator'],
        pageDescription: 'Create direct links and QR codes for WhatsApp or Telegram with predefined messages.',
        configTitle: 'Configuration',
        configDescription: 'Choose the platform and fill in the details to generate your link.',
        platformWhatsapp: 'WhatsApp',
        platformTelegram: 'Telegram',
        identifierLabelWhatsapp: 'Phone Number (with country code)',
        identifierLabelTelegram: 'Phone Number or @Username',
        identifierPlaceholderWhatsapp: 'E.g.: 5215512345678',
        identifierPlaceholderTelegram: 'E.g.: +52... or your_username',
        identifierDescriptionWhatsapp: "Include country code without '+', spaces, or hyphens.",
        identifierDescriptionTelegram: "For numbers, include country code. For usernames, do not include '@'.",
        messageLabel: 'Predefined Message (Optional)',
        messagePlaceholder: 'Hello, I would like more information about your services...',
        resultTitle: 'Your Link and QR',
        resultDescription: 'Copy the link or download the QR to share it.',
        qrPlaceholder: 'Enter a number or username to generate the link and QR code.',
        copyButton: 'Copy',
        openButton: 'Open',
        downloadButton: 'QR',
        telegramNote: 'Note: The predefined message for Telegram may not work on all devices or apps.',
        toastCopySuccessTitle: 'Link Copied!',
        toastCopySuccessDesc: 'The link has been copied to your clipboard.',
        toastCopyErrorTitle: 'Error',
        toastCopyErrorDesc: 'Could not copy the link.',
        toastDownloadSuccessTitle: 'Download Started',
        toastDownloadSuccessDesc: 'Your QR code is downloading.',
        toastDownloadErrorTitle: 'Download Error',
        toastDownloadErrorDesc: 'Could not generate the file.',
    }
  },
  instructions: {
    title: 'Instructions',
    description: 'Select a section to view the detailed guide.',
    comingSoon: 'Guide content coming soon...',
    controlPanelTitle: 'Dashboard',
    controlPanelDescription: 'A guide on how to interpret the main dashboard.',
    contentManagementTitle: 'Content Management',
    contentManagementDescription: 'Learn how to create, edit, and publish your content.',
    profileSettingsTitle: 'Profile Settings',
    profileSettingsDescription: 'How to update your public author information.',
    siteSettingsTitle: 'Site Settings',
    siteSettingsDescription: 'Configure global settings, webhooks, and paths.',
    buildingYourSiteTitle: 'How to Build Your Site',
    buildingYourSiteDescription: 'A developer guide to fetching and displaying your content.',
    guides: {
      back: 'Back to all guides',
      controlPanel: {
        title: 'Dashboard Guide',
        intro: 'The Dashboard is the first page you see after logging in. It provides a quick, at-a-glance overview of your site\'s content and activity.',
        stats: {
          title: 'Statistics Cards',
          p1: 'At the top of the page, you will find three main cards that summarize the status of your content:',
          list: {
            item1: { title: 'Total Articles', desc: 'Shows the total number of content pieces you have created, regardless of their status (draft or published).' },
            item2: { title: 'Drafts', desc: 'Shows how many articles are currently saved as drafts. These are not visible on your public site.' },
            item3: { title: 'Published', desc: 'Shows the number of articles that are live and visible to your audience.' },
          },
        },
        overview: {
          title: 'Content Overview',
          p1: 'This section gives you a breakdown of your content by type. It helps you understand what kind of content you produce the most.',
          list: {
            item1: { title: 'Blog', desc: 'For standard articles and posts.' },
            item2: { title: 'Resource', desc: 'For guides, documents, or other downloadable materials.' },
            item3: { title: 'Video', desc: 'For content where the main element is an embedded video.' },
            item4: { title: 'Other', desc: 'A flexible category for any other type of content you create.' },
          },
        },
      },
      contentManagement: {
        title: 'Content Management Guide',
        intro: 'This is the heart of the admin panel. Here you can create, view, edit, and delete all your content.',
        table: {
          title: 'The Content Table',
          p1: 'This table lists all your articles. You can sort by title by clicking on the header. The main actions are:',
          list: {
            item1: { title: 'Search', desc: 'Use the search bar at the top to quickly find an article by its title.' },
            item2: { title: 'Status', desc: 'Quickly see if an article is a "Draft" or "Published".' },
            item3: { title: 'Type', desc: 'Identifies the content type you assigned (Blog, Resource, etc.).' },
            item4: { title: 'Actions', desc: 'Here you can View the live article, Edit its content, or Delete it permanently.' },
          },
        },
        form: {
          title: 'The Content Form',
          p1: 'This is where the magic happens. Whether creating new content or editing existing articles, you will use this form.',
          list: {
            item1: { title: 'Title and Type', desc: 'The title is crucial for SEO. The content type helps organize your site and determines its URL path, which you configure in Site Settings.' },
            item2: { title: 'Image and File Uploads', desc: 'Upload your assets directly. The app optimizes images to WebP for speed. After an upload is complete, use the copy button to get a Markdown link and paste it into the body of your article.' },
            item3: { title: 'Markdown Editor', desc: 'Write using Markdown for easy formatting. Use the toolbar for quick access to common styles and switch to the "Preview" tab to see how it will look.' },
            item4: { title: 'Status (Draft/Published)', desc: 'This is a key field. An article in "Draft" is only visible to you. Changing it to "Published" makes it public and, if configured, will automatically trigger a deploy of your site via the webhook.' },
          },
        },
      },
      profileSettings: {
        title: 'Profile Settings Guide',
        intro: 'This page allows you to manage your public author identity. The information you save here can be displayed on your public website, for example, in an author bio box below your articles.',
        fields: {
          title: 'Profile Fields',
          p1: 'Each field helps build your public profile:',
          list: {
            item1: { title: 'Profile Photo', desc: 'Your avatar or headshot. A good photo adds a personal touch.' },
            item2: { title: 'Display Name', desc: 'This is the name that will be displayed as the author of the articles.' },
            item3: { title: 'Biography', desc: 'A short text to describe yourself or your work. It can appear below your articles.' },
            item4: { title: 'Website', desc: 'Link to your personal portfolio, social media, or any other relevant site.' },
          },
        },
        usage: {
          title: 'How This Information is Used',
          p1: 'This admin panel saves this data in the "profiles" collection in the database. Your public website (the "frontend") needs to be programmed to read this data and display it where desired, for example, by creating an "Author" component that fetches the profile based on the article\'s author ID.',
        },
      },
      siteSettings: {
        title: 'Site Settings Guide',
        intro: 'This is the control center for your site\'s global configuration. The settings here affect the entire platform, including integrations and URL structures. Be careful when modifying these values.',
        general: {
          title: 'General Settings',
          list: {
            item1: { title: 'Site Name', desc: 'A simple name to identify your project. It appears in the sidebar and the browser tab title.' },
            item2: { title: 'Site URL', desc: 'Crucial. This is the main URL of your public site (e.g., https://my-blog.com). It is used to generate correct preview links for your articles.' },
            item3: { title: 'Login Page Logo URL', desc: 'Customize the login page by providing a direct URL to your logo image.' },
          },
        },
        integrations: {
          title: 'Integrations & Automation',
          list: {
            item1: { title: 'Deploy Webhook URL', desc: 'This is a powerful automation tool. A webhook is a special URL provided by your hosting service (like Vercel, Netlify, or Cloudflare). When this panel sends a request to that URL, it tells your hosting service to start a new "deploy" (rebuild and publish) of your site. This panel automatically calls the webhook every time you publish an article.' },
          },
        },
        paths: {
          title: 'Content Path Settings',
          list: {
            item1: { title: 'Content Paths', desc: 'This section allows you to define the structure of your website\'s URLs. For example, if you set the "Path for Blogs" to "/articles", a blog post with the slug "my-first-post" will be accessible at `your-site.com/articles/my-first-post`. This gives you full control over your site\'s SEO and organization.' },
          },
        },
      },
      buildingYourSite: {
        title: 'Developer Guide: How to Build Your Site',
        intro: 'This admin panel is a "Headless CMS". That means it manages your content, but it does not control how your public website looks. This gives you complete freedom to build your frontend with any technology you want.',
        p1: 'You can build a static HTML site, use a server-side rendering (SSR) framework like Next.js or Astro, or even power a mobile app. The key is that your frontend will fetch data directly from your Firestore database.',
        p2: 'To help a developer build your site, you can provide them with the following data schema. It details the structure of your content in the database, so they know exactly how to read and display it.',
        schemaTitle: 'Database Schema',
        copyButton: 'Copy Markdown',
        copySuccess: 'Schema copied to clipboard!',
        databaseSchemaMarkdown: databaseSchemaMarkdownEn,
      }
    },
  },
  composer: {
    pageTitle: 'Composer Panel',
    pageDescription: 'Advanced development tools for the database.',
    schemaCard: {
      title: 'DB Structure Verifier',
      description: 'Verifies that essential collections and documents exist in Firestore. If something is missing, you can repair it.',
      checkButton: 'Verify Structure',
      fixButton: 'Apply Changes',
      resultsTitle: 'Issues Found:',
      successTitle: 'Structure Correct!',
      missingDoc: "The required document at path '{path}' does not exist.",
      checkError: 'An error occurred while checking the database.',
      successMessage: 'All required documents and collections exist.',
      fixSuccess: 'The database structure has been corrected.',
      fixError: 'Could not apply changes.',
    },
    resetCard: {
      title: 'Reset to First Use',
      description: 'Deletes all user data, articles, and invitations to simulate the first login. Site settings will be preserved. Ideal for re-testing the welcome flow.',
      button: 'Reset System',
      dialog: {
        title: 'Are you sure you want to reset the system?',
        description: 'This action will delete all articles, profiles, users, invitations, and the license. It CANNOT be undone. Site settings (siteConfig and publicConfig) will NOT be deleted.',
        confirm: 'Yes, reset now',
      },
      resettingToast: "Collection '{collectionName}' deleted.",
      successToast: 'The system is ready for a new first login.',
      errorToast: 'The reset process failed and was interrupted.',
    },
    nukeCard: {
      title: 'Danger Zone: Nuke Database',
      description: 'This action will delete ALL database collections (including settings) and log you out. It is irreversible. Use only if you want to start completely from scratch.',
      button: 'Nuke Database',
      dialog: {
        title: 'Irreversible Action!',
        description: 'You are about to delete ALL application data. To confirm, type <strong>DELETE</strong> in the field below.',
        confirmLabel: 'Confirmation',
        confirmPlaceholder: 'Type DELETE here',
        confirmAction: 'Confirm Nuke',
      },
      incorrectConfirmation: 'Incorrect Confirmation',
      incorrectConfirmationDesc: 'Please type DELETE to confirm.',
      successToast: 'All data has been deleted. You will be logged out.',
      errorToast: 'The nuke process failed and was interrupted.',
    },
    accessDenied: {
      title: 'Access Denied',
      description: 'This page is for administrators only.',
    },
    toastSuccess: 'Success',
    toastError: 'Error',
  },
  notFound: {
    title: 'Page Not Found',
    description: "Oops. It seems the page you're looking for has gotten lost in the digital universe. Check the URL or head back to the dashboard.",
    backButton: 'Back to Dashboard',
  },
};
